{"ast":null,"code":"const openAIRequest = async userQuery => {\n  const apiKey = process.env.REACT_APP_OPEN_AI_API_KEY;\n  const apiUrl = 'https://api.openai.com/v1/chat/completions';\n  const requestData = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${apiKey}`\n    },\n    body: JSON.stringify({\n      model: 'gpt-3.5-turbo',\n      messages: [{\n        role: 'user',\n        content: userQuery\n      }],\n      temperature: 0.7\n    })\n  };\n  const response = await fetch(apiUrl, requestData);\n  const body = await response.json();\n  console.log(body);\n\n  // fetch(apiUrl, requestData)\n  //     .then(response => response.json()) // Get body from response in JSON format\n  //     .then(data => {\n  //         // Handle the response data here    \n  //         console.log(data);\n  //     })\n  //     .catch(error => {\n  //         // Handle errors here\n  //         console.error('Error:', error);\n  //     });\n};\n\nexport default openAIRequest;","map":{"version":3,"names":["openAIRequest","userQuery","apiKey","process","env","REACT_APP_OPEN_AI_API_KEY","apiUrl","requestData","method","headers","body","JSON","stringify","model","messages","role","content","temperature","response","fetch","json","console","log"],"sources":["/Users/regroxy/Documents/Workspace/GeneralAssembly/course/final-project/ai-assist/src/util/openAIRequest.js"],"sourcesContent":["const openAIRequest = async (userQuery) => {\n\n    const apiKey = process.env.REACT_APP_OPEN_AI_API_KEY;\n    const apiUrl = 'https://api.openai.com/v1/chat/completions';\n\n    const requestData = {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${apiKey}`\n        },\n        body: JSON.stringify({\n            model: 'gpt-3.5-turbo',\n            messages: [{ role: 'user', content: userQuery }],\n            temperature: 0.7\n        })\n    };\n\n    const response = await fetch(apiUrl, requestData)\n    \n    const body = await response.json()\n    console.log(body)\n\n\n\n    // fetch(apiUrl, requestData)\n    //     .then(response => response.json()) // Get body from response in JSON format\n    //     .then(data => {\n    //         // Handle the response data here    \n    //         console.log(data);\n    //     })\n    //     .catch(error => {\n    //         // Handle errors here\n    //         console.error('Error:', error);\n    //     });\n\n}\n\nexport default openAIRequest"],"mappings":"AAAA,MAAMA,aAAa,GAAG,MAAOC,SAAS,IAAK;EAEvC,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,yBAAyB;EACpD,MAAMC,MAAM,GAAG,4CAA4C;EAE3D,MAAMC,WAAW,GAAG;IAChBC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAG,UAASP,MAAO;IACtC,CAAC;IACDQ,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACjBC,KAAK,EAAE,eAAe;MACtBC,QAAQ,EAAE,CAAC;QAAEC,IAAI,EAAE,MAAM;QAAEC,OAAO,EAAEf;MAAU,CAAC,CAAC;MAChDgB,WAAW,EAAE;IACjB,CAAC;EACL,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACb,MAAM,EAAEC,WAAW,CAAC;EAEjD,MAAMG,IAAI,GAAG,MAAMQ,QAAQ,CAACE,IAAI,CAAC,CAAC;EAClCC,OAAO,CAACC,GAAG,CAACZ,IAAI,CAAC;;EAIjB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAEJ,CAAC;;AAED,eAAeV,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}