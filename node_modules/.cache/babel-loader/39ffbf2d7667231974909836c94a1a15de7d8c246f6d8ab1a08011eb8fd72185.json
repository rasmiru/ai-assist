{"ast":null,"code":"const openAIRequest = async userQuery => {\n  const apiKey = process.env.REACT_APP_OPEN_AI_API_KEY;\n  const apiUrl = 'https://api.openai.com/v1/chat/completions';\n  const requestData = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${apiKey}`\n    },\n    body: JSON.stringify({\n      model: 'gpt-3.5-turbo',\n      messages: [{\n        role: 'user',\n        content: userQuery\n      }],\n      temperature: 0.7\n    })\n  };\n  const response = await fetch(apiUrl, requestData);\n  if (response.status === 200) {\n    const body = await response.json();\n    const aiMessage = await body.choices[0].message.content;\n    // console.log(aiMessage)\n    return aiMessage;\n  } else if (response.status === 429) {\n    // Rate limit exceeded 3 per min.\n    return 'Please try again after ';\n  } else {\n    return 'An error has occurred, please refresh the page and try again.';\n  }\n};\nexport default openAIRequest;","map":{"version":3,"names":["openAIRequest","userQuery","apiKey","process","env","REACT_APP_OPEN_AI_API_KEY","apiUrl","requestData","method","headers","body","JSON","stringify","model","messages","role","content","temperature","response","fetch","status","json","aiMessage","choices","message"],"sources":["/Users/regroxy/Documents/Workspace/GeneralAssembly/course/final-project/ai-assist/src/util/openAIRequest.js"],"sourcesContent":["const openAIRequest = async (userQuery) => {\n\n    const apiKey = process.env.REACT_APP_OPEN_AI_API_KEY;\n    const apiUrl = 'https://api.openai.com/v1/chat/completions';\n\n    const requestData = {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${apiKey}`\n        },\n        body: JSON.stringify({\n            model: 'gpt-3.5-turbo',\n            messages: [{ role: 'user', content: userQuery }],\n            temperature: 0.7\n        })\n    };\n\n    const response = await fetch(apiUrl, requestData)\n    if (response.status === 200) {\n        const body = await response.json()\n        const aiMessage = await body.choices[0].message.content\n        // console.log(aiMessage)\n        return aiMessage\n    }\n    else if (response.status === 429) {\n        // Rate limit exceeded 3 per min.\n        return 'Please try again after ';\n    }\n    else {\n        return 'An error has occurred, please refresh the page and try again.'\n    }\n\n}\n\nexport default openAIRequest"],"mappings":"AAAA,MAAMA,aAAa,GAAG,MAAOC,SAAS,IAAK;EAEvC,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,yBAAyB;EACpD,MAAMC,MAAM,GAAG,4CAA4C;EAE3D,MAAMC,WAAW,GAAG;IAChBC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAG,UAASP,MAAO;IACtC,CAAC;IACDQ,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACjBC,KAAK,EAAE,eAAe;MACtBC,QAAQ,EAAE,CAAC;QAAEC,IAAI,EAAE,MAAM;QAAEC,OAAO,EAAEf;MAAU,CAAC,CAAC;MAChDgB,WAAW,EAAE;IACjB,CAAC;EACL,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACb,MAAM,EAAEC,WAAW,CAAC;EACjD,IAAIW,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;IACzB,MAAMV,IAAI,GAAG,MAAMQ,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,MAAMC,SAAS,GAAG,MAAMZ,IAAI,CAACa,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAACR,OAAO;IACvD;IACA,OAAOM,SAAS;EACpB,CAAC,MACI,IAAIJ,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;IAC9B;IACA,OAAO,yBAAyB;EACpC,CAAC,MACI;IACD,OAAO,+DAA+D;EAC1E;AAEJ,CAAC;AAED,eAAepB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}